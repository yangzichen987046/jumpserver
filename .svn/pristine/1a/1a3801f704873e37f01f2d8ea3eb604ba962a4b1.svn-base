{% extends 'base.html' %}
{% load mytags %}
{% load humanize %}
{% block content %}
{% include 'nav_cat_bar.html' %}

<div class="wrapper wrapper-content no-padding">
    <div class="row wid">
        <div class="col-md-9" id="main"></div>
        <div class="col-md-3 numb">
                <p>实时总访问量<br><span>540</span></p>
                <p>当天访问量<br><span>97,210</span></p>
                <p>当月访问量<br><span>2,962,470</span></p>
                <p>日最低访问量<br><span>97,210</span></p>
                <p>日平均访问量<br><span>227,880</span></p>
                <p>日最高访问量<br><span>264,480</span></p>
        </div>
    </div>
</div>
    <div class="pic-all">
        <div class="pic">
            <div class="spin text-center">
                <i class="fa fa-chevron-left"></i>
            </div>
        </div>
        <div class="pic-m">

                <div class="col-md-12" id="b-left" ></div>
                <div class="col-md-12" id="b-right"></div>
                <div class="col-md-12">
                    <p>1</p>
                    <p>1</p>
                    <p>1</p>
                    <p>1</p>
                    <p>1</p>
                    <p>1</p>
                    <p>1</p>
                </div>

        </div>
    </div>
{% endblock %}

{% block self_footer_js %}
<script src="/static/js/echarts/echarts.js"></script>
<script src="/static/js/divscroll/divscroll.js"></script>
<script>

    require.config({
        paths: {
           'echarts': '/static/js/echarts/chart',
            'echarts/chart/line': '/static/js/echarts/chart/line',
            'echarts/chart/pie': '/static/js/echarts/chart/pie',
             'echarts/chart/map': '/static/js/echarts/chart/map'
        }
    });

// 使用
    function drewChart() {
        require(
                [
                    'echarts',
                    'echarts/chart/map' // 使用柱状图就加载bar模块，按需加载
                ],
                function (ec) {
                    // 基于准备好的dom，初始化echarts图表
                    var myChart = ec.init(document.getElementById('main'));
                    myChart.showLoading({
                        text: "图表数据正在努力加载..."
                    });
                    option = {
                        backgroundColor: '#f3f3f4',
                        color: ['gold', 'aqua', 'lime'],
                        title: {
                            text: '',
                            subtext: '',
                            x: 'center',
                            textStyle: {
                                color: '#fff'
                            }
                        },
                        tooltip: {
                            trigger: 'item',
                            formatter: '{b}'
                        },
                        legend: {
                            orient: 'vertical',
                            x: 'left',
                            data: [],
                            selectedMode: 'single',
                            selected: {
                                '上海 Top10': true
                            },
                            textStyle: {
                                color: '#fff'
                            }
                        },
                        toolbox: {
                            show: false,
                            orient: 'vertical',
                            x: 'right',
                            y: 'center',
                            feature: {
                                mark: {show: true},
                                dataView: {show: true, readOnly: false},
                                restore: {show: true},
                                saveAsImage: {show: true}
                            }
                        },
                        dataRange: {
                            show: true,
                            calculable: true,
                            min: 0,
                            max: 100,
                            x: 0,
                            y:'60%',
                            color: ['#ff3333', 'orange', 'yellow', 'lime', 'aqua'],
                            textStyle: {
                                color: '#000'
                            }
                        },
                        series: [
                            {
                                name: '全国',
                                type: 'map',
                                roam: true,
                                hoverable: false,
                                mapType: 'china',
                                itemStyle: {
                                    normal: {
                                        label: {
                                            show: true,
                                            textStyle: {
                                                color: 'rgba(100,149,237,1)'
                                            }
                                        },
                                        borderColor: 'rgba(100,149,237,1)',
                                        borderWidth: 0.5,
                                        areaStyle: {
                                            color: '#ccc'
                                        }
                                    }
                                },
                                data: [],
                                markLine: {
                                    smooth: true,
                                    symbol: ['none', 'circle'],
                                    symbolSize: 1,
                                    itemStyle: {
                                        normal: {
                                            color: '#fff',
                                            borderWidth: 1,
                                            borderColor: 'rgba(30,144,255,0.5)'
                                        }
                                    },
                                    data: [
                                        [{name: '上海'}, {name: '包头'}],
                                        [{name: '上海'}, {name: '北海'}],
                                        [{name: '上海'}, {name: '广州'}],
                                        [{name: '上海'}, {name: '郑州'}],
                                        [{name: '上海'}, {name: '长春'}],
                                        [{name: '上海'}, {name: '重庆'}],
                                        [{name: '上海'}, {name: '长沙'}],
                                        [{name: '上海'}, {name: '成都'}],
                                        [{name: '上海'}, {name: '丹东'}],
                                        [{name: '上海'}, {name: '大连'}],
                                        [{name: '上海'}, {name: '福州'}],
                                        [{name: '上海'}, {name: '海口'}],
                                        [{name: '上海'}, {name: '呼和浩特'}],
                                        [{name: '上海'}, {name: '合肥'}],
                                        [{name: '上海'}, {name: '哈尔滨'}],
                                        [{name: '上海'}, {name: '舟山'}],
                                        [{name: '上海'}, {name: '银川'}],
                                        [{name: '上海'}, {name: '南昌'}],
                                        [{name: '上海'}, {name: '昆明'}],
                                        [{name: '上海'}, {name: '贵阳'}],
                                        [{name: '上海'}, {name: '兰州'}],
                                        [{name: '上海'}, {name: '拉萨'}],
                                        [{name: '上海'}, {name: '连云港'}],
                                        [{name: '上海'}, {name: '临沂'}],
                                        [{name: '上海'}, {name: '柳州'}],
                                        [{name: '上海'}, {name: '宁波'}],
                                        [{name: '上海'}, {name: '南宁'}],
                                        [{name: '上海'}, {name: '北京'}],
                                        [{name: '上海'}, {name: '沈阳'}],
                                        [{name: '上海'}, {name: '秦皇岛'}],
                                        [{name: '上海'}, {name: '西安'}],
                                        [{name: '上海'}, {name: '石家庄'}],
                                        [{name: '上海'}, {name: '汕头'}],
                                        [{name: '上海'}, {name: '深圳'}],
                                        [{name: '上海'}, {name: '青岛'}],
                                        [{name: '上海'}, {name: '济南'}],
                                        [{name: '上海'}, {name: '天津'}],
                                        [{name: '上海'}, {name: '太原'}],
                                        [{name: '上海'}, {name: '乌鲁木齐'}],
                                        [{name: '上海'}, {name: '潍坊'}],
                                        [{name: '上海'}, {name: '威海'}],
                                        [{name: '上海'}, {name: '温州'}],
                                        [{name: '上海'}, {name: '武汉'}],
                                        [{name: '上海'}, {name: '厦门'}],
                                        [{name: '上海'}, {name: '西宁'}],
                                        [{name: '上海'}, {name: '徐州'}],
                                        [{name: '上海'}, {name: '烟台'}],
                                        [{name: '上海'}, {name: '珠海'}]
                                    ],
                                },
                                geoCoord: {
                                    '上海': [121.4648, 31.2891],
                                    '东莞': [113.8953, 22.901],
                                    '东营': [118.7073, 37.5513],
                                    '中山': [113.4229, 22.478],
                                    '临汾': [111.4783, 36.1615],
                                    '临沂': [118.3118, 35.2936],
                                    '丹东': [124.541, 40.4242],
                                    '丽水': [119.5642, 28.1854],
                                    '乌鲁木齐': [87.9236, 43.5883],
                                    '佛山': [112.8955, 23.1097],
                                    '保定': [115.0488, 39.0948],
                                    '兰州': [103.5901, 36.3043],
                                    '包头': [110.3467, 41.4899],
                                    '北京': [116.4551, 40.2539],
                                    '北海': [109.314, 21.6211],
                                    '南京': [118.8062, 31.9208],
                                    '南宁': [108.479, 23.1152],
                                    '南昌': [116.0046, 28.6633],
                                    '南通': [121.1023, 32.1625],
                                    '厦门': [118.1689, 24.6478],
                                    '台州': [121.1353, 28.6688],
                                    '合肥': [117.29, 32.0581],
                                    '呼和浩特': [111.4124, 40.4901],
                                    '咸阳': [108.4131, 34.8706],
                                    '哈尔滨': [127.9688, 45.368],
                                    '唐山': [118.4766, 39.6826],
                                    '嘉兴': [120.9155, 30.6354],
                                    '大同': [113.7854, 39.8035],
                                    '大连': [122.2229, 39.4409],
                                    '天津': [117.4219, 39.4189],
                                    '太原': [112.3352, 37.9413],
                                    '威海': [121.9482, 37.1393],
                                    '宁波': [121.5967, 29.6466],
                                    '宝鸡': [107.1826, 34.3433],
                                    '宿迁': [118.5535, 33.7775],
                                    '常州': [119.4543, 31.5582],
                                    '广州': [113.5107, 23.2196],
                                    '廊坊': [116.521, 39.0509],
                                    '延安': [109.1052, 36.4252],
                                    '张家口': [115.1477, 40.8527],
                                    '徐州': [117.5208, 34.3268],
                                    '德州': [116.6858, 37.2107],
                                    '惠州': [114.6204, 23.1647],
                                    '成都': [103.9526, 30.7617],
                                    '扬州': [119.4653, 32.8162],
                                    '承德': [117.5757, 41.4075],
                                    '拉萨': [91.1865, 30.1465],
                                    '无锡': [120.3442, 31.5527],
                                    '日照': [119.2786, 35.5023],
                                    '昆明': [102.9199, 25.4663],
                                    '杭州': [119.5313, 29.8773],
                                    '枣庄': [117.323, 34.8926],
                                    '柳州': [109.3799, 24.9774],
                                    '株洲': [113.5327, 27.0319],
                                    '武汉': [114.3896, 30.6628],
                                    '汕头': [117.1692, 23.3405],
                                    '江门': [112.6318, 22.1484],
                                    '沈阳': [123.1238, 42.1216],
                                    '沧州': [116.8286, 38.2104],
                                    '河源': [114.917, 23.9722],
                                    '泉州': [118.3228, 25.1147],
                                    '泰安': [117.0264, 36.0516],
                                    '泰州': [120.0586, 32.5525],
                                    '济南': [117.1582, 36.8701],
                                    '济宁': [116.8286, 35.3375],
                                    '海口': [110.3893, 19.8516],
                                    '淄博': [118.0371, 36.6064],
                                    '淮安': [118.927, 33.4039],
                                    '深圳': [114.5435, 22.5439],
                                    '清远': [112.9175, 24.3292],
                                    '温州': [120.498, 27.8119],
                                    '渭南': [109.7864, 35.0299],
                                    '湖州': [119.8608, 30.7782],
                                    '湘潭': [112.5439, 27.7075],
                                    '滨州': [117.8174, 37.4963],
                                    '潍坊': [119.0918, 36.524],
                                    '烟台': [120.7397, 37.5128],
                                    '玉溪': [101.9312, 23.8898],
                                    '珠海': [113.7305, 22.1155],
                                    '盐城': [120.2234, 33.5577],
                                    '盘锦': [121.9482, 41.0449],
                                    '石家庄': [114.4995, 38.1006],
                                    '福州': [119.4543, 25.9222],
                                    '秦皇岛': [119.2126, 40.0232],
                                    '绍兴': [120.564, 29.7565],
                                    '聊城': [115.9167, 36.4032],
                                    '肇庆': [112.1265, 23.5822],
                                    '舟山': [122.2559, 30.2234],
                                    '苏州': [120.6519, 31.3989],
                                    '莱芜': [117.6526, 36.2714],
                                    '菏泽': [115.6201, 35.2057],
                                    '营口': [122.4316, 40.4297],
                                    '葫芦岛': [120.1575, 40.578],
                                    '衡水': [115.8838, 37.7161],
                                    '衢州': [118.6853, 28.8666],
                                    '西宁': [101.4038, 36.8207],
                                    '西安': [109.1162, 34.2004],
                                    '贵阳': [106.6992, 26.7682],
                                    '连云港': [119.1248, 34.552],
                                    '邢台': [114.8071, 37.2821],
                                    '邯郸': [114.4775, 36.535],
                                    '郑州': [113.4668, 34.6234],
                                    '鄂尔多斯': [108.9734, 39.2487],
                                    '重庆': [107.7539, 30.1904],
                                    '金华': [120.0037, 29.1028],
                                    '铜川': [109.0393, 35.1947],
                                    '银川': [106.3586, 38.1775],
                                    '镇江': [119.4763, 31.9702],
                                    '长春': [125.8154, 44.2584],
                                    '长沙': [113.0823, 28.2568],
                                    '长治': [112.8625, 36.4746],
                                    '阳泉': [113.4778, 38.0951],
                                    '青岛': [120.4651, 36.3373],
                                    '韶关': [113.7964, 24.7028]
                                }
                            },

                            {
                                name: '上海 Top10',
                                type: 'map',
                                mapType: 'china',
                                data: [],
                                markLine: {
                                    smooth: true,
                                    effect: {
                                        show: true,
                                        scaleSize: 1,
                                        period: 30,
                                        color: '#fff',
                                        shadowBlur: 10
                                    },
                                    itemStyle: {
                                        normal: {
                                            borderWidth: 1,
                                            label: {show: true},
                                            lineStyle: {
                                                type: 'solid',
                                                shadowBlur: 10
                                            }
                                        }
                                    },
                                    data: arr1,
                                },
                                markPoint: {
                                    symbol: 'emptyCircle',
                                    symbolSize: function (v) {
                                        return 10 + v / 10
                                    },
                                    effect: {
                                        show: true,
                                        shadowBlur: 0
                                    },
                                    itemStyle: {
                                        normal: {
                                            label: {show: false}
                                        },
                                        emphasis: {
                                            label: {position: 'top'}
                                        }
                                    },
                                    data: arr2,
                                }
                            }

                        ]
                    };


                    // 为echarts对象加载数据
                    myChart.hideLoading();
                    myChart.setOption(option);

                }
        );

    }



    require(
    [
        'echarts',
        'echarts/chart/line' // 使用柱状图就加载bar模块，按需加载
    ],
    function (ec) {
        // 基于准备好的dom，初始化echarts图表
        var myChart = ec.init(document.getElementById('b-right'));
        myChart.showLoading({
            text: "图表数据正在努力加载..."
        });
        option = {//图表选项，包含图表实例任何可配置选项： 公共选项 ， 组件选项 ， 数据选项
            backgroundColor: '#f3f3f4',
            grid:{
                borderWidth:0
            },
            title : {//标题
                text: '当月每天的访问量',
                x: 'left',
                textStyle : {
                    color: '#333'
                }
            },
            tooltip : {//提示框（详见tooltip），鼠标悬浮交互时的信息提示
                trigger: 'axis',
                color:'#c2c2c2',
                axisPointer: {
                    lineStyle: {
                        color: '#c2c2c2'
                    }
                }
            },
            xAxis : [//直角坐标系中横轴数组
                {
                    type : 'category',//坐标轴类型，横轴默认为类目型'category'，纵轴默认为数值型'value'
                    boundaryGap : false,//类目起始和结束两端空白策略，见下图，默认为true留空，false则顶头
                    axisLabel:{
                        rotate:45,
                        textStyle : {
                            color: '#333'
                        }
                    },
                    axisTick:{
                        show:true,
                        lineStyle:{
                            color: '#c2c2c2',
                            width: 1
                        }
                    },
                    splitArea:{
                        show:false
                    },
                    splitLine:{
                        show:false
                    },
                    axisLine:{
                        show:true,
                        onZero: false,
                        lineStyle:{
                            color: '#AFABAB',
                            width: 1
                        }
                    },
                    data : ['周一','周二','周三','周四','周五','周六','周日']
                }
            ],
            yAxis : [//直角坐标系中纵轴数组
                {
                    type : 'value',
                    axisLabel:{
                        textStyle : {
                            color: '#333'
                        }
                    },
                    axisLine:{
                        show:true,
                        lineStyle:{
                            color: '#AFABAB',
                            width: 1
                        }
                    },
                    splitArea:{
                        show:false
                    },
                    splitLine:{
                        show:false
                    }
                }
            ],
            series : [//驱动图表生成的数据内容（详见series），数组中每一项代表一个系列的特殊选项及数据
                {
                    name:'成交',
                    type:'line',//图表类型，必要参数！如为空或不支持类型，则该系列数据不被显示。
                    smooth:true,//平滑曲线显示，smooth为true时lineStyle不支持虚线
                    itemStyle:{
                        normal:{
                            barBorderRadius:0,
                            color:'#0096F0',
                            areaStyle: {
                                type: 'default',
                                color:'#0096F0'
                            }
                        }
                    },
                    data:[220, 222, 321, 524, 260, 830, 710]
                }


            ]
        };




        // 为echarts对象加载数据
        myChart.hideLoading();
        myChart.setOption(option);

    }
);

require(
    [
        'echarts',
        'echarts/chart/line' // 使用柱状图就加载bar模块，按需加载
    ],
    function (ec) {
        // 基于准备好的dom，初始化echarts图表
        var myChart = ec.init(document.getElementById('b-left'));
        myChart.showLoading({
            text: "图表数据正在努力加载..."
        });
        option = {
            backgroundColor: '#f3f3f4',
            grid:{
                borderWidth:0
            },
            dataZoom : {
                show : true,
                realtime : true,
                start : 0,
                end : 100,
                dataBackgroundColor:'#000'
            },
            title : {
                text: '每5分钟访问量',
                x: 'left',
                textStyle : {
                    color: '#333'
                }
            },
            tooltip : {
                trigger: 'axis',
                color:'#c2c2c2',
                axisPointer:{
                    lineStyle:{
                        color:'#c2c2c2'
                    }
                }
            },
            xAxis : [
                {
                    type : 'category',
                    boundaryGap : false,
                    axisLabel:{

                        textStyle : {
                            color: '#333'
                        }
                    },
                    axisTick:{
                        show:true,
                        lineStyle:{
                            color: '#c2c2c2',
                            width: 1
                        }
                    },
                    splitArea:{
                        show:false
                    },
                    splitLine:{
                        show:false
                    },
                    axisLine:{
                        show:true,
                        onZero: false,
                        lineStyle:{
                            color: '#AFABAB',
                            width: 1
                        }
                    },
                    data : function (){
                        var list = [];
                        for (var i = 1; i <= 30; i++) {
                            list.push('2013-03-' + i);
                        }
                        return list;
                    }()
                }
            ],
            yAxis : [
                {
                    type : 'value',
                    axisLabel:{
                        textStyle : {
                            color: '#333'
                        }
                    },
                    axisLine:{
                        show:true,
                        lineStyle:{
                            color: '#AFABAB',
                            width: 1
                        }
                    },
                    splitArea:{
                        show:false
                    },
                    splitLine:{
                        show:false
                    }
                }
            ],
            series : [
                {
                    name:'最高',
                    type:'line',
                    itemStyle:{
                        normal:{
                            barBorderRadius:0,
                            color:'#0096F0',
                            areaStyle: {
                                type: 'default',
                                color:'#0096F0'
                            }
                        }
                    },
                    data:function (){
                        var list = [];
                        for (var i = 1; i <= 30; i++) {
                            list.push(Math.round(Math.random()* 30));
                        }
                        return list;
                    }()
                }
            ]
        };





        // 为echarts对象加载数据
        myChart.hideLoading();
        myChart.setOption(option);

    }
);

























$(document).ready(function() {

    arr1 = [];
    arr2 = [];
    $.ajax({
        type: "post",
        async: false, //同步执行
        url : "{% url 'jump_get_pic_data' %}",
        dataType: "json", //返回数据形式为json
        success: function (data) {
            if (data) {
                for (i = 0; i < data.lineData.length; i++) {
                    arr1.push(data.lineData[i]);
                }
                for (l = 0; l < data.pointData.length; l++) {
                    arr2.push(data.pointData[l]);
                }

                return drewChart();


            }


        },
        error: function (errorMsg) {
            alert("不好意思，大爷，图表请求数据失败啦!");
        }
    });



$(".spin").click(function()
            {
                $(".pic-all").toggleClass("xx")

                $(".pic").find("i").toggleClass("fa-chevron-right")
            });
})
        var main=$(window).height()-159;
        var pi_width=$(".wid").width()*0.666
        $("#main").css("height",main);
        $(".pic-m").css({"height":main,"width":pi_width});
        $(".pic-all").css({"display":"block","margin-right":-(pi_width+15),"width":pi_width+40,"height":main});

    $(window).resize(function() {
        var main=$(window).height()-159;
        var pi_width=$(".wid").width()*0.666
        $("#main").css("height",main)
        $(".pic-m").css({"height":main,"width":pi_width});
        $(".pic-all").css({"display":"block","margin-right":-(pi_width+15),"width":pi_width+40,"height":main});
    })
</script>

{% endblock %}